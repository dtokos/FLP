# coding=utf-8

# Even Fibonacci numbers
# Problem 2
#
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

from functools import reduce
from operator import add
from math import sqrt

def main():
	print(sumOfEvenFib(10))
	print(sumOfEvenFib(4000000))

def sumOfEvenFib(limit):
	return reduce(add, filter(lambda n: n % 2 == 0, fibGenerator(limit)), 0)

def fibGenerator(limit):
	n = 0
	sqrt5 = sqrt(5)
	fib = 0
	while fib < limit:
		a = ((1 + sqrt5) / 2) ** n
		b = ((1 - sqrt5) / 2) ** n
		fib = int((a - b) / sqrt5)
		yield fib
		n += 1

if __name__ == '__main__':
	main()
